package banking.DAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import banking.ConnectionUtil;
import banking.model.User;

public class BankingOracle implements BankingDAO {
	private static BankingOracle bankingOracle = null;
	
	public static BankingDAO getDAO() {
		if(bankingOracle == null) {
			bankingOracle = new BankingOracle();
		}
		return bankingOracle;
	}
	
	private BankingOracle() {
		
	}
	
	
	public Optional<List<User>> getAllUsers() {
		List<User> listOfUsers = new ArrayList<User>();
		Connection con = ConnectionUtil.getConnection();

		if (con == null) {
			return Optional.empty();
		}

		try {
			String sql = "select * from champions";
			PreparedStatement ps = con.prepareStatement(sql);
			ResultSet rs = ps.executeQuery();
			while (rs.next()) {
				listOfChampions.add(new Champion(rs.getInt("champion_id"), rs.getString("champion_name"),
						rs.getString("a1"), rs.getString("a2"), rs.getString("a3"), rs.getString("a4"),
						rs.getString("passive"), rs.getFloat("health")));
			}
			
			return Optional.of(listOfChampions);
		} catch (SQLException e) {

		}
		return Optional.empty();
		// TODO Auto-generated method stub
		return Optional.empty();
	}

	public Optional<User> getUser(Integer userID) {
		// TODO Auto-generated method stub
		return null;
	}

}
